/**/HTMLPreview.loadJS({"query":{"count":1,"created":"2015-08-03T16:24:53Z","lang":"vi-VN","diagnostics":{"url":[{"execution-start-time":"1","execution-stop-time":"2","execution-time":"1","content":"http://www.datatables.org/data/data.headers.xml"},{"execution-start-time":"7","execution-stop-time":"191","execution-time":"184","content":"https://raw.githubusercontent.com/abeMedia/jquery-smoove/master/dist/jquery.smoove.js"}],"publiclyCallable":"true","log":"response length: 7428","javascript":{"execution-start-time":"4","execution-stop-time":"192","execution-time":"187","instructions-used":"29040","table-name":"data.headers"},"user-time":"194","service-time":"185","build-version":"0.2.154"},"results":{"resources":{"url":"https://raw.githubusercontent.com/abeMedia/jquery-smoove/master/dist/jquery.smoove.js","status":"200","headers":{"result":{"content-security-policy":"default-src 'none'","x-xss-protection":"1; mode=block","x-frame-options":"deny","x-content-type-options":"nosniff","strict-transport-security":"max-age=31536000","etag":"\"dcef0dd823319ee8e0c92987be2e871ce9faa3cd\"","content-type":"text/plain; charset=utf-8","cache-control":"max-age=300","content-encoding":"gzip","content-length":"1917","accept-ranges":"bytes","date":"Mon, 03 Aug 2015 16:24:53 GMT","via":"1.1 varnish","connection":"keep-alive","x-served-by":"cache-hkg6822-HKG","x-cache":"HIT","x-cache-hits":"1","vary":"Authorization,Accept-Encoding","access-control-allow-origin":"*","expires":"Mon, 03 Aug 2015 16:29:53 GMT","source-age":"0"}},"content":"/*!\n* jQuery Smoove v0.2.7 (http://smoove.donlabs.com)\n* Copyright (c) 2014 Adam Bouqdib\n* Licensed under GPL-2.0 (http://abemedia.co.uk/license) \n*/\n\n(function ($, window, document){\n    \n    $.fn.smoove = function (options){\n        $.fn.smoove.init(this, $.extend({}, $.fn.smoove.defaults, options));\n        return this;\n    };\n    \n    $.fn.smoove.items = [];\n    $.fn.smoove.loaded = false;\n    \n    $.fn.smoove.defaults = {\n        offset: 150,\n        opacity: 0,\n        transition: \"all 1s ease, opacity 1.5s ease\",\n        transformStyle: 'preserve-3d',\n        transformOrigin: false,\n        perspective: 1000\n    };\n\n    $.fn.smoove.init = function (items, settings){\n        items.each(function() {\n            var $item = $(this),\n                params = $item.params = $.extend({}, settings, $item.data());\n                \n            $item.params.opacity = $item.params.opacity / 100;\n            $item.data('top', $item.offset().top);\n                \n            params.transition = crossBrowser('transition', params.transition, 'transform');\n            $item.css(params.transition);\n            \n            $.fn.smoove.items.push($item);\n        });\n        \n        // function for adding vendor prefixes\n        function crossBrowser(property, value, prefix) {\n        \n            function ucase(string) {\n                return string.charAt(0).toUpperCase() + string.slice(1);\n            }\n            \n            var vendor = ['webkit','moz','ms','o'],\n                properties = {};\n                \n            for(var i = 0; i < vendor.length; i++) {\n                if(prefix) {\n                    value = value.replace(prefix, '-' + vendor[i] + '-' + prefix);\n                }\n                properties[ucase(vendor[i]) + ucase(property)] = value;\n            }\n            properties[property] = value;\n            \n            return properties;\n        }\n        \n        // add event handlers\n        if(!$.fn.smoove.loaded) {\n            $.fn.smoove.loaded = true;\n            \n            var didScroll = false,\n                oldScroll = 0,\n                oldHeight = $(window).height(),\n                oldWidth = $(window).width(),\n                oldDocHeight = $(document).height(),\n                resizing;\n        \n            // naughty way of avoiding vertical scrollbars when items slide in/out from the side\n            if($('body').width() === $(window).width()) {\n                $('body').css('overflow-x','hidden');\n            }\n                \n            $(window).resize(function() {\n                clearTimeout(resizing);\n                resizing = setTimeout(function() {\n                    var height = $(window).height(),\n                        width = $(window).width(),\n                        direction = (oldHeight > height) ? direction = 'up' : 'down',\n                        items = $.fn.smoove.items;\n                    \n                    oldHeight = height;\n                    \n                    // responsive support - reassign position values on resize\n                    if(oldWidth !== width) {\n                        for(var i = 0; i < items.length; i++) {\n                            items[i].css(crossBrowser('transform', '')).css(crossBrowser('transition', ''));\n                        }\n                        \n                        // wait for responsive magic to finish\n                        var stillResizing = setInterval(function() {\n                            var docHeight = $(document).height();\n                            if(docHeight === oldDocHeight) {\n                                window.clearInterval(stillResizing);\n                                for(var i = 0; i < items.length; i++) {\n                                    items[i].data('top', items[i].offset().top);\n                                    items[i].css(items[i].params.transition);\n                                }\n                                smooveIt(direction);\n                            }\n                            oldDocHeight = docHeight;\n                        }, 500);\n                    } \n                    else {\n                        smooveIt(direction);\n                    }\n                    oldWidth = width;\n                }, 500);\n            });\n            \n            $(window).on('load', function() {\n                smooveIt();\n                \n                // throttle scroll handler\n                $(window).scroll(function() {\n                    didScroll = true;\n                });\n                setInterval(function() {\n                    if ( didScroll ) {\n                        didScroll = false;\n                        var scrolltop = $(window).scrollTop(),\n                            direction = (scrolltop < oldScroll) ? direction = 'up' : 'down';\n                        oldScroll = scrolltop;\n                        smooveIt(direction);\n                    }\n                }, 250);\n            });\n        }\n        \n        function smooveIt(direction) {\n            for(var i = 0; i < $.fn.smoove.items.length; i++) {\n                var $item = $.fn.smoove.items[i],\n                    params = $item.params,\n                    height = $(window).height(),\n                    // if direction isn't set, set offset to 0 to avoid hiding objects that are above the fold\n                    offset = (!direction || direction === 'down' && $item.css('opacity') === '1') ? 0 : params.offset,\n                    itemtop = $(window).scrollTop() + height - $item.data('top');\n                    \n                // offset in %\n                if(typeof offset === 'string' && offset.indexOf('%')) {\n                    offset = parseInt(offset) / 100 * height;\n                }\n                \n                if(itemtop < offset) {\n                    if(params.opacity !== false) {\n                        $item.css({opacity: params.opacity});\n                    }\n                    \n                    var transforms = [],\n                        properties = ['move','move3D','moveX','moveY','moveZ','rotate','rotate3d','rotateX','rotateY','rotateZ','scale','scale3d','scaleX','scaleY','skew','skewX','skewY'];\n                        \n                    for(var p = 0; p < properties.length; p++) {\n                        if(typeof params[properties[p]] !== \"undefined\") {\n                            transforms[properties[p]] = params[properties[p]];\n                        }\n                    }\n                    \n                    var transform = '';\n                    for(var t in transforms) {\n                        transform += t.replace('move', 'translate') + '(' + transforms[t] + ') ';\n                    }\n                    if(transform) {\n                        $item.css(crossBrowser('transform', transform));\n                        $item.parent().css(crossBrowser('perspective', params.perspective));\n                        //$item.parent().css(crossBrowser('transformStyle', params.transformstyle));\n                    \n                        if(params.transformOrigin) {\n                            $item.css(crossBrowser('transformOrigin', params.transformOrigin));\n                        }\n                    }\n                }\n                else {\n                    $item.css('opacity', 1).css(crossBrowser('transform', ''));\n                }\n            }\n        }\n    };\n\n}( jQuery, window, document ));"}}}});